/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * This API provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RequestHeader } from './RequestHeader';
import {
    RequestHeaderFromJSON,
    RequestHeaderFromJSONTyped,
    RequestHeaderToJSON,
} from './RequestHeader';

/**
 * 
 * @export
 * @interface RepublishRequest
 */
export interface RepublishRequest {
    /**
     * 
     * @type {RequestHeader}
     * @memberof RepublishRequest
     */
    RequestHeader?: RequestHeader;
    /**
     * 
     * @type {number}
     * @memberof RepublishRequest
     */
    SubscriptionId?: number;
    /**
     * 
     * @type {number}
     * @memberof RepublishRequest
     */
    RetransmitSequenceNumber?: number;
}

/**
 * Check if a given object implements the RepublishRequest interface.
 */
export function instanceOfRepublishRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RepublishRequestFromJSON(json: any): RepublishRequest {
    return RepublishRequestFromJSONTyped(json, false);
}

export function RepublishRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): RepublishRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'RequestHeader': !exists(json, 'RequestHeader') ? undefined : RequestHeaderFromJSON(json['RequestHeader']),
        'SubscriptionId': !exists(json, 'SubscriptionId') ? undefined : json['SubscriptionId'],
        'RetransmitSequenceNumber': !exists(json, 'RetransmitSequenceNumber') ? undefined : json['RetransmitSequenceNumber'],
    };
}

export function RepublishRequestToJSON(value?: RepublishRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'RequestHeader': RequestHeaderToJSON(value.RequestHeader),
        'SubscriptionId': value.SubscriptionId,
        'RetransmitSequenceNumber': value.RetransmitSequenceNumber,
    };
}


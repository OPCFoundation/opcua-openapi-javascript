/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Variant } from './Variant';
import {
    VariantFromJSON,
    VariantFromJSONTyped,
    VariantToJSON,
    VariantToJSONTyped,
} from './Variant';
import type { DiagnosticInfo } from './DiagnosticInfo';
import {
    DiagnosticInfoFromJSON,
    DiagnosticInfoFromJSONTyped,
    DiagnosticInfoToJSON,
    DiagnosticInfoToJSONTyped,
} from './DiagnosticInfo';

/**
 * 
 * @export
 * @interface CallMethodResult
 */
export interface CallMethodResult {
    /**
     * 
     * @type {number}
     * @memberof CallMethodResult
     */
    StatusCode?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof CallMethodResult
     */
    InputArgumentResults?: Array<number>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof CallMethodResult
     */
    InputArgumentDiagnosticInfos?: Array<DiagnosticInfo>;
    /**
     * 
     * @type {Array<Variant>}
     * @memberof CallMethodResult
     */
    OutputArguments?: Array<Variant>;
}

/**
 * Check if a given object implements the CallMethodResult interface.
 */
export function instanceOfCallMethodResult(value: object): value is CallMethodResult {
    return true;
}

export function CallMethodResultFromJSON(json: any): CallMethodResult {
    return CallMethodResultFromJSONTyped(json, false);
}

export function CallMethodResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): CallMethodResult {
    if (json == null) {
        return json;
    }
    return {
        
        'StatusCode': json['StatusCode'] == null ? undefined : json['StatusCode'],
        'InputArgumentResults': json['InputArgumentResults'] == null ? undefined : json['InputArgumentResults'],
        'InputArgumentDiagnosticInfos': json['InputArgumentDiagnosticInfos'] == null ? undefined : ((json['InputArgumentDiagnosticInfos'] as Array<any>).map(DiagnosticInfoFromJSON)),
        'OutputArguments': json['OutputArguments'] == null ? undefined : ((json['OutputArguments'] as Array<any>).map(VariantFromJSON)),
    };
}

  export function CallMethodResultToJSON(json: any): CallMethodResult {
      return CallMethodResultToJSONTyped(json, false);
  }

  export function CallMethodResultToJSONTyped(value?: CallMethodResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'StatusCode': value['StatusCode'],
        'InputArgumentResults': value['InputArgumentResults'],
        'InputArgumentDiagnosticInfos': value['InputArgumentDiagnosticInfos'] == null ? undefined : ((value['InputArgumentDiagnosticInfos'] as Array<any>).map(DiagnosticInfoToJSON)),
        'OutputArguments': value['OutputArguments'] == null ? undefined : ((value['OutputArguments'] as Array<any>).map(VariantToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * This API provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LocalizedText } from './LocalizedText';
import {
    LocalizedTextFromJSON,
    LocalizedTextFromJSONTyped,
    LocalizedTextToJSON,
} from './LocalizedText';

/**
 * 
 * @export
 * @interface ReferenceDescription
 */
export interface ReferenceDescription {
    /**
     * 
     * @type {string}
     * @memberof ReferenceDescription
     */
    ReferenceTypeId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ReferenceDescription
     */
    IsForward?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ReferenceDescription
     */
    NodeId?: string;
    /**
     * 
     * @type {string}
     * @memberof ReferenceDescription
     */
    BrowseName?: string;
    /**
     * 
     * @type {LocalizedText}
     * @memberof ReferenceDescription
     */
    DisplayName?: LocalizedText;
    /**
     * 
     * @type {number}
     * @memberof ReferenceDescription
     */
    NodeClass?: number;
    /**
     * 
     * @type {string}
     * @memberof ReferenceDescription
     */
    TypeDefinition?: string;
}

/**
 * Check if a given object implements the ReferenceDescription interface.
 */
export function instanceOfReferenceDescription(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReferenceDescriptionFromJSON(json: any): ReferenceDescription {
    return ReferenceDescriptionFromJSONTyped(json, false);
}

export function ReferenceDescriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReferenceDescription {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ReferenceTypeId': !exists(json, 'ReferenceTypeId') ? undefined : json['ReferenceTypeId'],
        'IsForward': !exists(json, 'IsForward') ? undefined : json['IsForward'],
        'NodeId': !exists(json, 'NodeId') ? undefined : json['NodeId'],
        'BrowseName': !exists(json, 'BrowseName') ? undefined : json['BrowseName'],
        'DisplayName': !exists(json, 'DisplayName') ? undefined : LocalizedTextFromJSON(json['DisplayName']),
        'NodeClass': !exists(json, 'NodeClass') ? undefined : json['NodeClass'],
        'TypeDefinition': !exists(json, 'TypeDefinition') ? undefined : json['TypeDefinition'],
    };
}

export function ReferenceDescriptionToJSON(value?: ReferenceDescription | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ReferenceTypeId': value.ReferenceTypeId,
        'IsForward': value.IsForward,
        'NodeId': value.NodeId,
        'BrowseName': value.BrowseName,
        'DisplayName': LocalizedTextToJSON(value.DisplayName),
        'NodeClass': value.NodeClass,
        'TypeDefinition': value.TypeDefinition,
    };
}


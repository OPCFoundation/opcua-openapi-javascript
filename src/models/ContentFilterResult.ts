/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * This API provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContentFilterElementResult } from './ContentFilterElementResult';
import {
    ContentFilterElementResultFromJSON,
    ContentFilterElementResultFromJSONTyped,
    ContentFilterElementResultToJSON,
} from './ContentFilterElementResult';
import type { DiagnosticInfo } from './DiagnosticInfo';
import {
    DiagnosticInfoFromJSON,
    DiagnosticInfoFromJSONTyped,
    DiagnosticInfoToJSON,
} from './DiagnosticInfo';

/**
 * 
 * @export
 * @interface ContentFilterResult
 */
export interface ContentFilterResult {
    /**
     * 
     * @type {Array<ContentFilterElementResult>}
     * @memberof ContentFilterResult
     */
    ElementResults?: Array<ContentFilterElementResult>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof ContentFilterResult
     */
    ElementDiagnosticInfos?: Array<DiagnosticInfo>;
}

/**
 * Check if a given object implements the ContentFilterResult interface.
 */
export function instanceOfContentFilterResult(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ContentFilterResultFromJSON(json: any): ContentFilterResult {
    return ContentFilterResultFromJSONTyped(json, false);
}

export function ContentFilterResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContentFilterResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ElementResults': !exists(json, 'ElementResults') ? undefined : ((json['ElementResults'] as Array<any>).map(ContentFilterElementResultFromJSON)),
        'ElementDiagnosticInfos': !exists(json, 'ElementDiagnosticInfos') ? undefined : ((json['ElementDiagnosticInfos'] as Array<any>).map(DiagnosticInfoFromJSON)),
    };
}

export function ContentFilterResultToJSON(value?: ContentFilterResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ElementResults': value.ElementResults === undefined ? undefined : ((value.ElementResults as Array<any>).map(ContentFilterElementResultToJSON)),
        'ElementDiagnosticInfos': value.ElementDiagnosticInfos === undefined ? undefined : ((value.ElementDiagnosticInfos as Array<any>).map(DiagnosticInfoToJSON)),
    };
}


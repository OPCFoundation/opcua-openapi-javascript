/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { KeyValuePair } from './KeyValuePair';
import {
    KeyValuePairFromJSON,
    KeyValuePairFromJSONTyped,
    KeyValuePairToJSON,
    KeyValuePairToJSONTyped,
} from './KeyValuePair';
import type { RolePermissionType } from './RolePermissionType';
import {
    RolePermissionTypeFromJSON,
    RolePermissionTypeFromJSONTyped,
    RolePermissionTypeToJSON,
    RolePermissionTypeToJSONTyped,
} from './RolePermissionType';

/**
 * 
 * @export
 * @interface SecurityGroupDataType
 */
export interface SecurityGroupDataType {
    /**
     * 
     * @type {string}
     * @memberof SecurityGroupDataType
     */
    Name?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof SecurityGroupDataType
     */
    SecurityGroupFolder?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof SecurityGroupDataType
     */
    KeyLifetime?: number;
    /**
     * 
     * @type {string}
     * @memberof SecurityGroupDataType
     */
    SecurityPolicyUri?: string;
    /**
     * 
     * @type {number}
     * @memberof SecurityGroupDataType
     */
    MaxFutureKeyCount?: number;
    /**
     * 
     * @type {number}
     * @memberof SecurityGroupDataType
     */
    MaxPastKeyCount?: number;
    /**
     * 
     * @type {string}
     * @memberof SecurityGroupDataType
     */
    SecurityGroupId?: string;
    /**
     * 
     * @type {Array<RolePermissionType>}
     * @memberof SecurityGroupDataType
     */
    RolePermissions?: Array<RolePermissionType>;
    /**
     * 
     * @type {Array<KeyValuePair>}
     * @memberof SecurityGroupDataType
     */
    GroupProperties?: Array<KeyValuePair>;
    /**
     * 
     * @type {string}
     * @memberof SecurityGroupDataType
     */
    UaTypeId?: string;
}

/**
 * Check if a given object implements the SecurityGroupDataType interface.
 */
export function instanceOfSecurityGroupDataType(value: object): value is SecurityGroupDataType {
    return true;
}

export function SecurityGroupDataTypeFromJSON(json: any): SecurityGroupDataType {
    return SecurityGroupDataTypeFromJSONTyped(json, false);
}

export function SecurityGroupDataTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SecurityGroupDataType {
    if (json == null) {
        return json;
    }
    return {
        
        'Name': json['Name'] == null ? undefined : json['Name'],
        'SecurityGroupFolder': json['SecurityGroupFolder'] == null ? undefined : json['SecurityGroupFolder'],
        'KeyLifetime': json['KeyLifetime'] == null ? undefined : json['KeyLifetime'],
        'SecurityPolicyUri': json['SecurityPolicyUri'] == null ? undefined : json['SecurityPolicyUri'],
        'MaxFutureKeyCount': json['MaxFutureKeyCount'] == null ? undefined : json['MaxFutureKeyCount'],
        'MaxPastKeyCount': json['MaxPastKeyCount'] == null ? undefined : json['MaxPastKeyCount'],
        'SecurityGroupId': json['SecurityGroupId'] == null ? undefined : json['SecurityGroupId'],
        'RolePermissions': json['RolePermissions'] == null ? undefined : ((json['RolePermissions'] as Array<any>).map(RolePermissionTypeFromJSON)),
        'GroupProperties': json['GroupProperties'] == null ? undefined : ((json['GroupProperties'] as Array<any>).map(KeyValuePairFromJSON)),
        'UaTypeId': json['UaTypeId'] == null ? undefined : json['UaTypeId'],
    };
}

  export function SecurityGroupDataTypeToJSON(json: any): SecurityGroupDataType {
      return SecurityGroupDataTypeToJSONTyped(json, false);
  }

  export function SecurityGroupDataTypeToJSONTyped(value?: SecurityGroupDataType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'Name': value['Name'],
        'SecurityGroupFolder': value['SecurityGroupFolder'],
        'KeyLifetime': value['KeyLifetime'],
        'SecurityPolicyUri': value['SecurityPolicyUri'],
        'MaxFutureKeyCount': value['MaxFutureKeyCount'],
        'MaxPastKeyCount': value['MaxPastKeyCount'],
        'SecurityGroupId': value['SecurityGroupId'],
        'RolePermissions': value['RolePermissions'] == null ? undefined : ((value['RolePermissions'] as Array<any>).map(RolePermissionTypeToJSON)),
        'GroupProperties': value['GroupProperties'] == null ? undefined : ((value['GroupProperties'] as Array<any>).map(KeyValuePairToJSON)),
        'UaTypeId': value['UaTypeId'],
    };
}


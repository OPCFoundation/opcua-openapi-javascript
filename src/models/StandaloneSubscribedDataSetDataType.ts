/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * This API provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DataSetMetaDataType } from './DataSetMetaDataType';
import {
    DataSetMetaDataTypeFromJSON,
    DataSetMetaDataTypeFromJSONTyped,
    DataSetMetaDataTypeToJSON,
} from './DataSetMetaDataType';
import type { ExtensionObject } from './ExtensionObject';
import {
    ExtensionObjectFromJSON,
    ExtensionObjectFromJSONTyped,
    ExtensionObjectToJSON,
} from './ExtensionObject';

/**
 * 
 * @export
 * @interface StandaloneSubscribedDataSetDataType
 */
export interface StandaloneSubscribedDataSetDataType {
    /**
     * 
     * @type {string}
     * @memberof StandaloneSubscribedDataSetDataType
     */
    Name?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof StandaloneSubscribedDataSetDataType
     */
    DataSetFolder?: Array<string>;
    /**
     * 
     * @type {DataSetMetaDataType}
     * @memberof StandaloneSubscribedDataSetDataType
     */
    DataSetMetaData?: DataSetMetaDataType;
    /**
     * 
     * @type {ExtensionObject}
     * @memberof StandaloneSubscribedDataSetDataType
     */
    SubscribedDataSet?: ExtensionObject;
}

/**
 * Check if a given object implements the StandaloneSubscribedDataSetDataType interface.
 */
export function instanceOfStandaloneSubscribedDataSetDataType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StandaloneSubscribedDataSetDataTypeFromJSON(json: any): StandaloneSubscribedDataSetDataType {
    return StandaloneSubscribedDataSetDataTypeFromJSONTyped(json, false);
}

export function StandaloneSubscribedDataSetDataTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): StandaloneSubscribedDataSetDataType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'Name': !exists(json, 'Name') ? undefined : json['Name'],
        'DataSetFolder': !exists(json, 'DataSetFolder') ? undefined : json['DataSetFolder'],
        'DataSetMetaData': !exists(json, 'DataSetMetaData') ? undefined : DataSetMetaDataTypeFromJSON(json['DataSetMetaData']),
        'SubscribedDataSet': !exists(json, 'SubscribedDataSet') ? undefined : ExtensionObjectFromJSON(json['SubscribedDataSet']),
    };
}

export function StandaloneSubscribedDataSetDataTypeToJSON(value?: StandaloneSubscribedDataSetDataType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Name': value.Name,
        'DataSetFolder': value.DataSetFolder,
        'DataSetMetaData': DataSetMetaDataTypeToJSON(value.DataSetMetaData),
        'SubscribedDataSet': ExtensionObjectToJSON(value.SubscribedDataSet),
    };
}


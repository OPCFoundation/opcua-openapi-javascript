/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * Provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HistoryEventFieldList } from './HistoryEventFieldList';
import {
    HistoryEventFieldListFromJSON,
    HistoryEventFieldListFromJSONTyped,
    HistoryEventFieldListToJSON,
    HistoryEventFieldListToJSONTyped,
} from './HistoryEventFieldList';
import type { EventFilter } from './EventFilter';
import {
    EventFilterFromJSON,
    EventFilterFromJSONTyped,
    EventFilterToJSON,
    EventFilterToJSONTyped,
} from './EventFilter';

/**
 * 
 * @export
 * @interface UpdateEventDetails
 */
export interface UpdateEventDetails {
    /**
     * 
     * @type {string}
     * @memberof UpdateEventDetails
     */
    NodeId?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateEventDetails
     */
    PerformInsertReplace?: number;
    /**
     * 
     * @type {EventFilter}
     * @memberof UpdateEventDetails
     */
    Filter?: EventFilter;
    /**
     * 
     * @type {Array<HistoryEventFieldList>}
     * @memberof UpdateEventDetails
     */
    EventData?: Array<HistoryEventFieldList>;
    /**
     * 
     * @type {string}
     * @memberof UpdateEventDetails
     */
    UaTypeId?: string;
}

/**
 * Check if a given object implements the UpdateEventDetails interface.
 */
export function instanceOfUpdateEventDetails(value: object): value is UpdateEventDetails {
    return true;
}

export function UpdateEventDetailsFromJSON(json: any): UpdateEventDetails {
    return UpdateEventDetailsFromJSONTyped(json, false);
}

export function UpdateEventDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateEventDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'NodeId': json['NodeId'] == null ? undefined : json['NodeId'],
        'PerformInsertReplace': json['PerformInsertReplace'] == null ? undefined : json['PerformInsertReplace'],
        'Filter': json['Filter'] == null ? undefined : EventFilterFromJSON(json['Filter']),
        'EventData': json['EventData'] == null ? undefined : ((json['EventData'] as Array<any>).map(HistoryEventFieldListFromJSON)),
        'UaTypeId': json['UaTypeId'] == null ? undefined : json['UaTypeId'],
    };
}

  export function UpdateEventDetailsToJSON(json: any): UpdateEventDetails {
      return UpdateEventDetailsToJSONTyped(json, false);
  }

  export function UpdateEventDetailsToJSONTyped(value?: UpdateEventDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'NodeId': value['NodeId'],
        'PerformInsertReplace': value['PerformInsertReplace'],
        'Filter': EventFilterToJSON(value['Filter']),
        'EventData': value['EventData'] == null ? undefined : ((value['EventData'] as Array<any>).map(HistoryEventFieldListToJSON)),
        'UaTypeId': value['UaTypeId'],
    };
}


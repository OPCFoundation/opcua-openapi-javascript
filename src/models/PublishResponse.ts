/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * This API provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DiagnosticInfo } from './DiagnosticInfo';
import {
    DiagnosticInfoFromJSON,
    DiagnosticInfoFromJSONTyped,
    DiagnosticInfoToJSON,
} from './DiagnosticInfo';
import type { NotificationMessage } from './NotificationMessage';
import {
    NotificationMessageFromJSON,
    NotificationMessageFromJSONTyped,
    NotificationMessageToJSON,
} from './NotificationMessage';
import type { ResponseHeader } from './ResponseHeader';
import {
    ResponseHeaderFromJSON,
    ResponseHeaderFromJSONTyped,
    ResponseHeaderToJSON,
} from './ResponseHeader';

/**
 * 
 * @export
 * @interface PublishResponse
 */
export interface PublishResponse {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof PublishResponse
     */
    ResponseHeader?: ResponseHeader;
    /**
     * 
     * @type {number}
     * @memberof PublishResponse
     */
    SubscriptionId?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof PublishResponse
     */
    AvailableSequenceNumbers?: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof PublishResponse
     */
    MoreNotifications?: boolean;
    /**
     * 
     * @type {NotificationMessage}
     * @memberof PublishResponse
     */
    NotificationMessage?: NotificationMessage;
    /**
     * 
     * @type {Array<number>}
     * @memberof PublishResponse
     */
    Results?: Array<number>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof PublishResponse
     */
    DiagnosticInfos?: Array<DiagnosticInfo>;
}

/**
 * Check if a given object implements the PublishResponse interface.
 */
export function instanceOfPublishResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PublishResponseFromJSON(json: any): PublishResponse {
    return PublishResponseFromJSONTyped(json, false);
}

export function PublishResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublishResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ResponseHeader': !exists(json, 'ResponseHeader') ? undefined : ResponseHeaderFromJSON(json['ResponseHeader']),
        'SubscriptionId': !exists(json, 'SubscriptionId') ? undefined : json['SubscriptionId'],
        'AvailableSequenceNumbers': !exists(json, 'AvailableSequenceNumbers') ? undefined : json['AvailableSequenceNumbers'],
        'MoreNotifications': !exists(json, 'MoreNotifications') ? undefined : json['MoreNotifications'],
        'NotificationMessage': !exists(json, 'NotificationMessage') ? undefined : NotificationMessageFromJSON(json['NotificationMessage']),
        'Results': !exists(json, 'Results') ? undefined : json['Results'],
        'DiagnosticInfos': !exists(json, 'DiagnosticInfos') ? undefined : ((json['DiagnosticInfos'] as Array<any>).map(DiagnosticInfoFromJSON)),
    };
}

export function PublishResponseToJSON(value?: PublishResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ResponseHeader': ResponseHeaderToJSON(value.ResponseHeader),
        'SubscriptionId': value.SubscriptionId,
        'AvailableSequenceNumbers': value.AvailableSequenceNumbers,
        'MoreNotifications': value.MoreNotifications,
        'NotificationMessage': NotificationMessageToJSON(value.NotificationMessage),
        'Results': value.Results,
        'DiagnosticInfos': value.DiagnosticInfos === undefined ? undefined : ((value.DiagnosticInfos as Array<any>).map(DiagnosticInfoToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * This API provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EndpointDescription } from './EndpointDescription';
import {
    EndpointDescriptionFromJSON,
    EndpointDescriptionFromJSONTyped,
    EndpointDescriptionToJSON,
} from './EndpointDescription';
import type { ResponseHeader } from './ResponseHeader';
import {
    ResponseHeaderFromJSON,
    ResponseHeaderFromJSONTyped,
    ResponseHeaderToJSON,
} from './ResponseHeader';

/**
 * 
 * @export
 * @interface GetEndpointsResponse
 */
export interface GetEndpointsResponse {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof GetEndpointsResponse
     */
    ResponseHeader?: ResponseHeader;
    /**
     * 
     * @type {Array<EndpointDescription>}
     * @memberof GetEndpointsResponse
     */
    Endpoints?: Array<EndpointDescription>;
}

/**
 * Check if a given object implements the GetEndpointsResponse interface.
 */
export function instanceOfGetEndpointsResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetEndpointsResponseFromJSON(json: any): GetEndpointsResponse {
    return GetEndpointsResponseFromJSONTyped(json, false);
}

export function GetEndpointsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetEndpointsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ResponseHeader': !exists(json, 'ResponseHeader') ? undefined : ResponseHeaderFromJSON(json['ResponseHeader']),
        'Endpoints': !exists(json, 'Endpoints') ? undefined : ((json['Endpoints'] as Array<any>).map(EndpointDescriptionFromJSON)),
    };
}

export function GetEndpointsResponseToJSON(value?: GetEndpointsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ResponseHeader': ResponseHeaderToJSON(value.ResponseHeader),
        'Endpoints': value.Endpoints === undefined ? undefined : ((value.Endpoints as Array<any>).map(EndpointDescriptionToJSON)),
    };
}


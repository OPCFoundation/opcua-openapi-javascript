/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * This API provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DiagnosticInfo } from './DiagnosticInfo';
import {
    DiagnosticInfoFromJSON,
    DiagnosticInfoFromJSONTyped,
    DiagnosticInfoToJSON,
} from './DiagnosticInfo';
import type { ResponseHeader } from './ResponseHeader';
import {
    ResponseHeaderFromJSON,
    ResponseHeaderFromJSONTyped,
    ResponseHeaderToJSON,
} from './ResponseHeader';

/**
 * 
 * @export
 * @interface SetTriggeringResponse
 */
export interface SetTriggeringResponse {
    /**
     * 
     * @type {ResponseHeader}
     * @memberof SetTriggeringResponse
     */
    ResponseHeader?: ResponseHeader;
    /**
     * 
     * @type {Array<number>}
     * @memberof SetTriggeringResponse
     */
    AddResults?: Array<number>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof SetTriggeringResponse
     */
    AddDiagnosticInfos?: Array<DiagnosticInfo>;
    /**
     * 
     * @type {Array<number>}
     * @memberof SetTriggeringResponse
     */
    RemoveResults?: Array<number>;
    /**
     * 
     * @type {Array<DiagnosticInfo>}
     * @memberof SetTriggeringResponse
     */
    RemoveDiagnosticInfos?: Array<DiagnosticInfo>;
}

/**
 * Check if a given object implements the SetTriggeringResponse interface.
 */
export function instanceOfSetTriggeringResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SetTriggeringResponseFromJSON(json: any): SetTriggeringResponse {
    return SetTriggeringResponseFromJSONTyped(json, false);
}

export function SetTriggeringResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SetTriggeringResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ResponseHeader': !exists(json, 'ResponseHeader') ? undefined : ResponseHeaderFromJSON(json['ResponseHeader']),
        'AddResults': !exists(json, 'AddResults') ? undefined : json['AddResults'],
        'AddDiagnosticInfos': !exists(json, 'AddDiagnosticInfos') ? undefined : ((json['AddDiagnosticInfos'] as Array<any>).map(DiagnosticInfoFromJSON)),
        'RemoveResults': !exists(json, 'RemoveResults') ? undefined : json['RemoveResults'],
        'RemoveDiagnosticInfos': !exists(json, 'RemoveDiagnosticInfos') ? undefined : ((json['RemoveDiagnosticInfos'] as Array<any>).map(DiagnosticInfoFromJSON)),
    };
}

export function SetTriggeringResponseToJSON(value?: SetTriggeringResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ResponseHeader': ResponseHeaderToJSON(value.ResponseHeader),
        'AddResults': value.AddResults,
        'AddDiagnosticInfos': value.AddDiagnosticInfos === undefined ? undefined : ((value.AddDiagnosticInfos as Array<any>).map(DiagnosticInfoToJSON)),
        'RemoveResults': value.RemoveResults,
        'RemoveDiagnosticInfos': value.RemoveDiagnosticInfos === undefined ? undefined : ((value.RemoveDiagnosticInfos as Array<any>).map(DiagnosticInfoToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * This API provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContentFilter } from './ContentFilter';
import {
    ContentFilterFromJSON,
    ContentFilterFromJSONTyped,
    ContentFilterToJSON,
} from './ContentFilter';
import type { SimpleAttributeOperand } from './SimpleAttributeOperand';
import {
    SimpleAttributeOperandFromJSON,
    SimpleAttributeOperandFromJSONTyped,
    SimpleAttributeOperandToJSON,
} from './SimpleAttributeOperand';

/**
 * 
 * @export
 * @interface EventFilter
 */
export interface EventFilter {
    /**
     * 
     * @type {Array<SimpleAttributeOperand>}
     * @memberof EventFilter
     */
    SelectClauses?: Array<SimpleAttributeOperand>;
    /**
     * 
     * @type {ContentFilter}
     * @memberof EventFilter
     */
    WhereClause?: ContentFilter;
}

/**
 * Check if a given object implements the EventFilter interface.
 */
export function instanceOfEventFilter(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function EventFilterFromJSON(json: any): EventFilter {
    return EventFilterFromJSONTyped(json, false);
}

export function EventFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'SelectClauses': !exists(json, 'SelectClauses') ? undefined : ((json['SelectClauses'] as Array<any>).map(SimpleAttributeOperandFromJSON)),
        'WhereClause': !exists(json, 'WhereClause') ? undefined : ContentFilterFromJSON(json['WhereClause']),
    };
}

export function EventFilterToJSON(value?: EventFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'SelectClauses': value.SelectClauses === undefined ? undefined : ((value.SelectClauses as Array<any>).map(SimpleAttributeOperandToJSON)),
        'WhereClause': ContentFilterToJSON(value.WhereClause),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * This API provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExtensionObject } from './ExtensionObject';
import {
    ExtensionObjectFromJSON,
    ExtensionObjectFromJSONTyped,
    ExtensionObjectToJSON,
} from './ExtensionObject';

/**
 * 
 * @export
 * @interface MonitoringParameters
 */
export interface MonitoringParameters {
    /**
     * 
     * @type {number}
     * @memberof MonitoringParameters
     */
    ClientHandle?: number;
    /**
     * 
     * @type {number}
     * @memberof MonitoringParameters
     */
    SamplingInterval?: number;
    /**
     * 
     * @type {ExtensionObject}
     * @memberof MonitoringParameters
     */
    Filter?: ExtensionObject;
    /**
     * 
     * @type {number}
     * @memberof MonitoringParameters
     */
    QueueSize?: number;
    /**
     * 
     * @type {boolean}
     * @memberof MonitoringParameters
     */
    DiscardOldest?: boolean;
}

/**
 * Check if a given object implements the MonitoringParameters interface.
 */
export function instanceOfMonitoringParameters(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MonitoringParametersFromJSON(json: any): MonitoringParameters {
    return MonitoringParametersFromJSONTyped(json, false);
}

export function MonitoringParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): MonitoringParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ClientHandle': !exists(json, 'ClientHandle') ? undefined : json['ClientHandle'],
        'SamplingInterval': !exists(json, 'SamplingInterval') ? undefined : json['SamplingInterval'],
        'Filter': !exists(json, 'Filter') ? undefined : ExtensionObjectFromJSON(json['Filter']),
        'QueueSize': !exists(json, 'QueueSize') ? undefined : json['QueueSize'],
        'DiscardOldest': !exists(json, 'DiscardOldest') ? undefined : json['DiscardOldest'],
    };
}

export function MonitoringParametersToJSON(value?: MonitoringParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ClientHandle': value.ClientHandle,
        'SamplingInterval': value.SamplingInterval,
        'Filter': ExtensionObjectToJSON(value.Filter),
        'QueueSize': value.QueueSize,
        'DiscardOldest': value.DiscardOldest,
    };
}


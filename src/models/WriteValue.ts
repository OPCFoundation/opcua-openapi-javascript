/* tslint:disable */
/* eslint-disable */
/**
 * OPC UA Web API
 * This API provides simple HTTPS based access to an OPC UA server.
 *
 * The version of the OpenAPI document: 1.05.4
 * Contact: office@opcfoundation.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DataValue } from './DataValue';
import {
    DataValueFromJSON,
    DataValueFromJSONTyped,
    DataValueToJSON,
} from './DataValue';

/**
 * 
 * @export
 * @interface WriteValue
 */
export interface WriteValue {
    /**
     * 
     * @type {string}
     * @memberof WriteValue
     */
    NodeId?: string;
    /**
     * 
     * @type {number}
     * @memberof WriteValue
     */
    AttributeId?: number;
    /**
     * 
     * @type {string}
     * @memberof WriteValue
     */
    IndexRange?: string;
    /**
     * 
     * @type {DataValue}
     * @memberof WriteValue
     */
    Value?: DataValue;
}

/**
 * Check if a given object implements the WriteValue interface.
 */
export function instanceOfWriteValue(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function WriteValueFromJSON(json: any): WriteValue {
    return WriteValueFromJSONTyped(json, false);
}

export function WriteValueFromJSONTyped(json: any, ignoreDiscriminator: boolean): WriteValue {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'NodeId': !exists(json, 'NodeId') ? undefined : json['NodeId'],
        'AttributeId': !exists(json, 'AttributeId') ? undefined : json['AttributeId'],
        'IndexRange': !exists(json, 'IndexRange') ? undefined : json['IndexRange'],
        'Value': !exists(json, 'Value') ? undefined : DataValueFromJSON(json['Value']),
    };
}

export function WriteValueToJSON(value?: WriteValue | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'NodeId': value.NodeId,
        'AttributeId': value.AttributeId,
        'IndexRange': value.IndexRange,
        'Value': DataValueToJSON(value.Value),
    };
}

